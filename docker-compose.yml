version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: associsse-postgres
    environment:
      POSTGRES_DB: associsse
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Minio Object Storage
  minio:
    image: minio/minio:latest
    container_name: associsse-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: associsse-app
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/associsse?schema=public"
      NEXTAUTH_URL: "http://localhost:3000"
      NEXTAUTH_SECRET: "your-secret-key-change-in-production"
      MINIO_ENDPOINT: "minio"
      MINIO_PORT: "9000"
      MINIO_ACCESS_KEY: "minioadmin"
      MINIO_SECRET_KEY: "minioadmin"
      MINIO_BUCKET: "associsse"
      MINIO_USE_SSL: "false"
      CI: "true"
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: sh -c "pnpm install --frozen-lockfile && pnpm db:generate && pnpm db:migrate && pnpm dev"

volumes:
  postgres_data:
  minio_data:
